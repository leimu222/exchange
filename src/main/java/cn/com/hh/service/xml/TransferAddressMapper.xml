<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.common.api.mapper.TransferAddressMapper">

    <resultMap id="TransferAddressResult" type="TransferAddress" >
            <result property="id" column="id" />
            <result property="address" column="address" />
            <result property="minAmount" column="min_amount" />
            <result property="status" column="status" />
            <result property="transferFee" column="transfer_fee" />
            <result property="coinId" column="coin_id" />
    </resultMap>

    <sql id="selectTransferAddressVo">
        select   id,  address,  min_amount,  status,  transfer_fee,  coin_id 
        from transfer_address
    </sql>
    <!-- 查询列表 -->
    <select id="selectTransferAddressList" parameterType="TransferAddress" resultMap="TransferAddressResult">
        <include refid="selectTransferAddressVo"/>
        <where>
                    <if test = "id != null">
                        and id  = #{id}
                    </if>
                    <if test = "address != null and address != ''">
                        and address  = #{address}
                    </if>
                    <if test = "minAmount != null">
                        and min_amount  = #{minAmount}
                    </if>
                    <if test = "status != null">
                        and status  = #{status}
                    </if>
                    <if test = "transferFee != null">
                        and transfer_fee  = #{transferFee}
                    </if>
                    <if test = "coinId != null and coinId != ''">
                        and coin_id  = #{coinId}
                    </if>
        </where>
    </select>
    <!-- 根据ID查询实体类 -->
    <select id="selectTransferAddressById" parameterType="Long" resultMap="TransferAddressResult">
        <include refid="selectTransferAddressVo"/>
        where  id  = #{id} 
    </select>
    <!-- 插入实体类 -->
    <insert id="insertTransferAddress" parameterType="TransferAddress" useGeneratedKeys="true" >
        insert into transfer_address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test = "id != null">
                id,
            </if>
            <if test = "address != null">
                address,
            </if>
            <if test = "minAmount != null">
                min_amount,
            </if>
            <if test = "status != null">
                status,
            </if>
            <if test = "transferFee != null">
                transfer_fee,
            </if>
            <if test = "coinId != null">
                coin_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test = "id != null">
                #{id},
            </if>
            <if test = "address != null">
                #{address},
            </if>
            <if test = "minAmount != null">
                #{minAmount},
            </if>
            <if test = "status != null">
                #{status},
            </if>
            <if test = "transferFee != null">
                #{transferFee},
            </if>
            <if test = "coinId != null">
                #{coinId},
            </if>
        </trim>
    </insert>
    <!-- 更新实体类 -->
    <update id="updateTransferAddress" parameterType="TransferAddress">
        update transfer_address
        <trim prefix="SET" suffixOverrides=",">
            <if test = "address != null">
            address  = #{address},
            </if>
            <if test = "minAmount != null">
            min_amount  = #{minAmount},
            </if>
            <if test = "status != null">
            status  = #{status},
            </if>
            <if test = "transferFee != null">
            transfer_fee  = #{transferFee},
            </if>
            <if test = "coinId != null">
            coin_id  = #{coinId},
            </if>
        </trim>
        where  id  = #{id} 
    </update>
    <delete id="deleteTransferAddressById" parameterType="Long">
        delete from transfer_address where  id  = #{id} 
    </delete>

    <delete id="deleteTransferAddressByIds" parameterType="Long">
        delete from transfer_address where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>